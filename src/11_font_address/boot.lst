     1                                  %include "../include/cdecl.s"
     1                              <1> %macro	cdecl	1-*.nolist
     2                              <1> 	%rep	%0 - 1
     3                              <1> 		push	%{-1:-1}
     4                              <1> 		%rotate -1
     5                              <1> 	%endrep
     6                              <1> 	%rotate -1
     7                              <1> 		call %1
     8                              <1> 	%if 1 < %0
     9                              <1> 		add	sp,(__BITS__ >> 3) * (%0 - 1)
    10                              <1> 	%endif
    11                              <1> %endmacro
     2                                  %include "../include/drive.s"
     1                              <1> struc drive
     2 00000000 <res 00000002>      <1> 	.no	resw	1	; number of drive
     3 00000002 <res 00000002>      <1> 	.cyln	resw	1	; cylnder
     4 00000004 <res 00000002>      <1> 	.head	resw	1	; head
     5 00000006 <res 00000002>      <1> 	.sect	resw	1	; sector
     6                              <1> endstruc
     3                                  %include "../include/define.s"
     1                              <1> BOOT_LOAD		equ	0x7c00
     2                              <1> 
     3                              <1> BOOT_SIZE		equ	(1024 * 8)
     4                              <1> SECT_SIZE		equ	(512)
     5                              <1> BOOT_SECT		equ	(BOOT_SIZE / SECT_SIZE)
     6                              <1> 
     7                              <1> E820_RECORD_SIZE	equ	20
     8                              <1> 
     9                              <1> 
     4                                  
     5                                  BOOT_LOAD	equ	0x7c00
     6                                  ORG		BOOT_LOAD
     7                                  
     8                                  entry:
     9 00000000 EB58                    	jmp	ipl
    10 00000002 90<rept>                	times 	90 - ($ - $$) db 0x90
    11                                  
    12                                  ipl:
    13 0000005A FA                      	cli
    14                                  
    15 0000005B B80000                  	mov	ax,0x0000
    16 0000005E 8ED8                    	mov	ds,ax
    17 00000060 8EC0                    	mov	es,ax
    18 00000062 8ED0                    	mov	ss,ax
    19 00000064 BC007C                  	mov	sp,BOOT_LOAD
    20                                  
    21 00000067 FB                      	sti
    22 00000068 8816[B400]              	mov	[BOOT + drive.no], dl
    23                                  	
    24 0000006C 68[9900]E84A0083C4-     	cdecl	puts,.s0
    24 00000074 02                 
    25 00000075 BB0F00                  	mov	bx, BOOT_SECT - 1 		; -1 indicate this sector
    26 00000078 B9007E                  	mov	cx, BOOT_LOAD + SECT_SIZE * 1	; load next
    27 0000007B 515368[B400]E89700-     	cdecl	read_chs, BOOT, bx, cx
    27 00000083 83C406             
    28                                  
    29 00000086 39D8                    	cmp	ax, bx
    30 00000088 740C                    .10Q:	jz	.10E
    31 0000008A 68[A500]E82C0083C4-     .10T:	cdecl	puts, .e0	; Error
    31 00000092 02                 
    32 00000093 E84500                  	call	reboot
    33 00000096 E95A02                  .10E:	jmp	stage_2
    34                                  
    35 00000099 426F6F74696E672E2E-     .s0	db	"Booting...",0,0x0D,
    35 000000A2 2E000D             
    36 000000A5 5B4572726F725D2073-     .e0	db	"[Error] sector",0
    36 000000AE 6563746F7200       
    37                                  
    38                                  ALIGN	2,db 0
    39                                  BOOT:
    40                                  	istruc drive
    41 000000B4 0000                    		at drive.no,	dw	0
    42 000000B6 0000                    		at drive.cyln,	dw	0
    43 000000B8 0000                    		at drive.head,	dw	0
    44 000000BA 0200                    		at drive.sect,	dw	2
    45                                  	iend
    46                                  
    47                                  %include	"../modules/real/puts.s"
     1                              <1> puts:
     2 000000BC 55                  <1> 	push	bp
     3 000000BD 89E5                <1> 	mov	bp,sp
     4                              <1> 
     5 000000BF 50                  <1> 	push	ax
     6 000000C0 53                  <1> 	push	bx
     7 000000C1 56                  <1> 	push	si
     8                              <1> 
     9 000000C2 8B7604              <1> 	mov	si,[bp + 4] ;si : Dist
    10                              <1> 	
    11 000000C5 B40E                <1> 	mov	ah,0x0E
    12 000000C7 BB0000              <1> 	mov	bx,0x0000
    13 000000CA FC                  <1> 	cld
    14                              <1> .10L:
    15 000000CB AC                  <1> 	lodsb	;al = *si;si++
    16                              <1> 
    17 000000CC 3C00                <1> 	cmp 	al,0
    18 000000CE 7404                <1> 	je	.10E ; exit
    19                              <1> 
    20 000000D0 CD10                <1> 	int	0x10
    21 000000D2 EBF7                <1> 	jmp	.10L ; loop
    22                              <1> .10E:
    23                              <1> 
    24 000000D4 5E                  <1> 	pop 	si
    25 000000D5 5B                  <1> 	pop	bx
    26 000000D6 58                  <1> 	pop	ax
    27                              <1> 
    28 000000D7 89EC                <1> 	mov	sp,bp
    29 000000D9 5D                  <1> 	pop	bp
    30                              <1> 
    31 000000DA C3                  <1> 	ret
    48                                  %include	"../modules/real/reboot.s"
     1                              <1> reboot:
     2 000000DB 68[F700]E8DBFF83C4- <1> 	cdecl puts,.s0	; depens on puts.s
     2 000000E3 02                  <1>
     3                              <1> 
     4                              <1> .10L:
     5 000000E4 B410                <1> 	mov	ah,0x10
     6 000000E6 CD16                <1> 	int	0x16
     7                              <1> 
     8 000000E8 3C20                <1> 	cmp	al,' '
     9 000000EA 75F8                <1> 	jne	.10L
    10                              <1> 
    11 000000EC 68[1501]E8CAFF83C4- <1> 	cdecl	puts, .s1
    11 000000F4 02                  <1>
    12 000000F5 CD19                <1> 	int 0x19
    13                              <1> 
    14 000000F7 0A0D50555348205350- <1> .s0	db 0x0A,0x0D,"PUSH SPACE KEY TO REBOOT...",0
    14 00000100 414345204B45592054- <1>
    14 00000109 4F205245424F4F542E- <1>
    14 00000112 2E2E00              <1>
    15 00000115 0A0D0A0D00          <1> .s1	db 0x0A,0x0D,0x0A,0x0D,0
    49                                  %include	"../modules/real/read_chs.s"
     1                              <1> read_chs: ;read_chs(drive_address,sectors,dst)
     2                              <1> 	
     3 0000011A 55                  <1> 	push	bp
     4 0000011B 89E5                <1> 	mov	bp,sp
     5                              <1> 
     6 0000011D 6A03                <1> 	push	3	; number of trying
     7 0000011F 6A00                <1> 	push	0	; sectors
     8                              <1> 
     9 00000121 53                  <1> 	push	bx
    10 00000122 51                  <1> 	push	cx
    11 00000123 52                  <1> 	push	dx
    12 00000124 06                  <1> 	push	es
    13 00000125 56                  <1> 	push	si
    14                              <1> 
    15 00000126 8B7604              <1> 	mov	si,[bp + 4]	; this is address.
    16                              <1> 
    17 00000129 8A6C02              <1> 	mov	ch,[si + drive.cyln + 0]
    18 0000012C 8A4C03              <1> 	mov	cl,[si + drive.cyln + 1]
    19 0000012F C0E106              <1> 	shl	cl,6		; xxxxxxxx xx______
    20 00000132 0A4C06              <1> 	or	cl,[si + drive.sect]
    21                              <1> 
    22 00000135 8A7404              <1> 	mov	dh,[si + drive.head]
    23 00000138 8A14                <1> 	mov	dl,[si + drive.no]
    24 0000013A B80000              <1> 	mov	ax,0x0000
    25 0000013D 8EC0                <1> 	mov	es,ax
    26 0000013F 8B5E08              <1> 	mov	bx,[bp + 8]	; bx = dst
    27                              <1> .10L:
    28 00000142 B402                <1> 	mov	ah,0x02
    29 00000144 8A4606              <1> 	mov	al,[bp + 6]	; al = sectors
    30                              <1> 
    31 00000147 CD13                <1> 	int	0x13
    32 00000149 7304                <1> 	jnc	.11E		
    33                              <1> 
    34 0000014B B000                <1> 	mov	al,0
    35 0000014D EB0C                <1> 	jmp	.10E
    36                              <1> .11E:	
    37 0000014F 3C00                <1> 	cmp	al,0
    38 00000151 7508                <1> 	jne	.10E
    39                              <1> 
    40 00000153 B80000              <1> 	mov	ax,0
    41 00000156 FF4EFE              <1> 	dec	word [bp - 2]	; dec trying number
    42 00000159 75E7                <1> 	jnz	.10L
    43                              <1> .10E:				; exit
    44 0000015B B400                <1> 	mov	ah,0
    45                              <1> 
    46                              <1> 	;cdecl	itoa, word[bp - 2],.s1,8,10,0b0000
    47                              <1> 	;cdecl	puts, .s1
    48                              <1> 
    49 0000015D 5E                  <1> 	pop si
    50 0000015E 07                  <1> 	pop es
    51 0000015F 5A                  <1> 	pop dx
    52 00000160 59                  <1> 	pop cx
    53 00000161 5B                  <1> 	pop bx
    54                              <1> 
    55 00000162 89EC                <1> 	mov	sp,bp
    56 00000164 5D                  <1> 	pop	bp
    57                              <1> 
    58 00000165 C3                  <1> 	ret
    59                              <1> 
    60 00000166 2D2D2D2D2D2D2D2D    <1> .s1	db	"--------"
    61                              <1> 
    62                              <1> 
    50                                  
    51 0000016E 00<rept>                	times	510 - ($ - $$) db 0x00
    52 000001FE 55AA                    	db	0x55,0xAA	; end of sector
    53                                  
    54                                  FONT:
    55 00000200 0000                    .seg:	dw	0
    56 00000202 0000                    .off:	dw	0
    57                                  
    58                                  
    59                                  %include	"../modules/real/itoa.s"
     1                              <1> itoa:	;itoa(num,buf,size,radix,flag);
     2 00000204 55                  <1> 	push 	bp
     3 00000205 89E5                <1> 	mov	bp,sp
     4                              <1> 
     5                              <1> 	
     6 00000207 50                  <1> 	push	ax
     7 00000208 53                  <1> 	push	bx
     8 00000209 51                  <1> 	push	cx
     9 0000020A 52                  <1> 	push	dx
    10 0000020B 56                  <1> 	push	si
    11 0000020C 57                  <1> 	push	di
    12                              <1> 
    13                              <1> 
    14                              <1> 	;init
    15 0000020D 8B5E0C              <1> 	mov	bx, word [bp + 12]	; bx = flag
    16 00000210 8B4E08              <1> 	mov	cx,	 [bp + 8]	; cx = size
    17 00000213 8B7606              <1> 	mov	si,	 [bp + 6]	; si = dist
    18                              <1> 
    19 00000216 89F7                <1> 	mov	di,si
    20                              <1> 
    21                              <1> 	;cmp	cx,0
    22                              <1> 	;jg	.10A
    23                              <1> 	;jmp	.40A		; no buffer
    24                              <1> 
    25                              <1> .10A:				; start
    26                              <1> 
    27 00000218 B020                <1> 	mov	al,' '
    28 0000021A F7C30400            <1> 	test	bx, 0b0100
    29 0000021E 7402                <1> 	je	.42E
    30 00000220 B030                <1> 	mov	al,'0'
    31                              <1> .42E:
    32                              <1> 
    33                              <1> 
    34 00000222 FC                  <1> 	cld
    35 00000223 F3AA                <1> 	rep	stosb
    36                              <1> 
    37 00000225 8B4604              <1> 	mov	ax,[bp + 4]	; ax = num	
    38 00000228 8B4E08              <1> 	mov	cx,[bp + 8]	; cx = size
    39 0000022B 89F7                <1> 	mov	di,si
    40 0000022D 01CF                <1> 	add	di,cx		; di is tail of buffer
    41 0000022F 4F                  <1> 	dec	di
    42                              <1> 
    43 00000230 F7C30100            <1> 	test	bx,0b0001	; tmp flag.is_signed
    44 00000234 7408                <1> .10Q:	jz	.10E		; if tmp == unsigned 
    45 00000236 83F800              <1>   	cmp	ax,0		; check(ax - 0)
    46 00000239 7D03                <1> .12Q:	jge	.12E		; if 0 <= ax goto .12E
    47 0000023B 83CB02              <1> 	or	bx,0b0010	; flag |= print_sign
    48                              <1> .12E:
    49                              <1> .10E:
    50                              <1> 	
    51                              <1> 
    52 0000023E F7C30200            <1> 	test	bx,0b0010	; if flag.print_size
    53 00000242 7410                <1> .20Q:	je	.20E		; not print sign
    54 00000244 83F800              <1> 	cmp 	ax,0		; check(ax - 0)
    55 00000247 7D07                <1> 	jge	.22F		; if 0 <= ax got .22F
    56 00000249 F7D8                <1> 	neg	ax		; ax *= -1
    57 0000024B C6042D              <1> 	mov	[si],byte '-'
    58 0000024E EB03                <1> 	jmp	.22E
    59 00000250 C6042B              <1> .22F:	mov	[si],byte '+'
    60 00000253 49                  <1> .22E:	dec	cx		; finaly
    61                              <1> .20E:
    62                              <1> 
    63 00000254 8B5E0A              <1> 	mov	bx,[bp + 10]	; bx = radix
    64                              <1> .30L:
    65                              <1> 	
    66 00000257 BA0000              <1> 	mov	dx, 0
    67 0000025A F7F3                <1> 	div	bx		; DX = AX % radix
    68                              <1> 				; AX = AX / radix
    69                              <1> 
    70 0000025C 89D6                <1> 	mov	si,dx
    71 0000025E 8A94[7402]          <1> 	mov	dl,byte[.ascii + si]	; DL = ASCII[DX]
    72                              <1> 
    73 00000262 8815                <1> 	mov	[di],dl		; start writing in tail of buffer
    74 00000264 4F                  <1> 	dec	di
    75                              <1> 
    76 00000265 83F800              <1> 	cmp	ax,0
    77 00000268 E0ED                <1> 	loopnz	.30L
    78                              <1> 
    79                              <1> .40A:
    80                              <1> 
    81 0000026A 5F                  <1> 	pop	di
    82 0000026B 5E                  <1> 	pop	si
    83 0000026C 5A                  <1> 	pop	dx
    84 0000026D 59                  <1> 	pop	cx
    85 0000026E 5B                  <1> 	pop	bx
    86 0000026F 58                  <1> 	pop	ax
    87                              <1> 
    88 00000270 89EC                <1> 	mov	sp,bp
    89 00000272 5D                  <1> 	pop	bp
    90                              <1> 
    91 00000273 C3                  <1> 	ret
    92                              <1> 
    93 00000274 303132333435363738- <1> .ascii	db	"0123456789ABCDEF"
    93 0000027D 39414243444546      <1>
    94                              <1> 
    95                              <1> 	
    96                              <1> 	
    97                              <1> 	
    60                                  %include	"../modules/real/get_drive_param.s"
     1                              <1> get_drive_param:
     2                              <1> 	
     3 00000284 55                  <1> 	push	bp
     4 00000285 89E5                <1> 	mov	bp,sp
     5                              <1> 	
     6 00000287 52                  <1> 	push	dx
     7 00000288 56                  <1> 	push	si
     8 00000289 51                  <1> 	push	cx
     9 0000028A 53                  <1> 	push	bx
    10 0000028B 57                  <1> 	push	di
    11 0000028C 06                  <1> 	push	es
    12                              <1> 
    13 0000028D 8B7604              <1> 	mov	si,[bp + 4]
    14                              <1> 
    15 00000290 B80000              <1> 	mov	ax,0
    16 00000293 8EC0                <1> 	mov	es,ax
    17 00000295 89C7                <1> 	mov	di,ax
    18                              <1> 	
    19 00000297 8A14                <1> 	mov	dl,[si + drive.no]
    20 00000299 B408                <1> 	mov	ah,0x08
    21 0000029B B90000              <1> 	mov	cx,0
    22 0000029E CD13                <1> 	int	0x13	; get drive param
    23 000002A0 7224                <1> 	jc	.10F	; error
    24                              <1> 
    25 000002A2 89C8                <1> 	mov	ax,cx
    26 000002A4 83E03F              <1> 	and	ax,0b00111111
    27 000002A7 894406              <1> 	mov	[si + drive.sect],ax	; sector
    28                              <1> 
    29 000002AA C0E906              <1> 	shr	cl,6
    30 000002AD C1C908              <1> 	ror	cx,8			;CH,CL = CL,CH
    31 000002B0 83C101              <1> 	add	cx,1
    32 000002B3 894C02              <1> 	mov	[si + drive.cyln],cx	; cylnder
    33                              <1> 
    34 000002B6 89D3                <1> 	mov	bx,dx
    35 000002B8 C1EB08              <1> 	shr	bx,8
    36 000002BB 83C301              <1> 	add	bx,1
    37 000002BE 895C04              <1> 	mov	[si + drive.head],bx
    38                              <1> 
    39 000002C1 B80100              <1> 	mov	ax,1				; seccess
    40                              <1> 	
    41 000002C4 EB03                <1> 	jmp	.10E
    42                              <1> .10F:
    43 000002C6 B80000              <1> 	mov	ax,0
    44                              <1> .10E:
    45                              <1> 
    46 000002C9 07                  <1> 	pop	es
    47 000002CA 5F                  <1> 	pop	di
    48 000002CB 5B                  <1> 	pop	bx
    49 000002CC 59                  <1> 	pop	cx
    50 000002CD 5E                  <1> 	pop	si
    51 000002CE 5A                  <1> 	pop	dx
    52                              <1> 
    53 000002CF 89EC                <1> 	mov	sp,bp
    54 000002D1 5D                  <1> 	pop	bp
    55                              <1> 
    56 000002D2 C3                  <1> 	ret
    61                                  %include	"../modules/real/get_font_adr.s"
     1                              <1> get_font_adr:
     2                              <1> 	
     3 000002D3 55                  <1> 	push	bp
     4 000002D4 89E5                <1> 	mov	bp,sp
     5                              <1> 	
     6 000002D6 56                  <1> 	push	si
     7 000002D7 50                  <1> 	push	ax
     8 000002D8 53                  <1> 	push	bx
     9 000002D9 06                  <1> 	push	es
    10 000002DA 55                  <1> 	push	bp
    11                              <1> 	
    12 000002DB 8B7604              <1> 	mov	si,[bp + 4]
    13 000002DE B83011              <1> 	mov	ax,0x1130
    14 000002E1 B706                <1> 	mov	bh,0x06
    15 000002E3 CD10                <1> 	int	0x10
    16                              <1> 
    17 000002E5 8C04                <1> 	mov	[si + 0],es
    18 000002E7 896C02              <1> 	mov	[si + 2],bp
    19                              <1> 
    20 000002EA 5D                  <1> 	pop	bp
    21 000002EB 07                  <1> 	pop	es
    22 000002EC 5B                  <1> 	pop	bx
    23 000002ED 58                  <1> 	pop	ax
    24 000002EE 5E                  <1> 	pop	si
    25                              <1> 
    26 000002EF 89EC                <1> 	mov	sp,bp
    27 000002F1 5D                  <1> 	pop	bp
    28                              <1> 
    29 000002F2 C3                  <1> 	ret
    62                                  
    63                                  stage_2:
    64                                  
    65 000002F3 68[6D03]E8C3FD83C4-     	cdecl	puts,.s0
    65 000002FB 02                 
    66                                  
    67 000002FC 68[B400]E882FF83C4-     	cdecl	get_drive_param, BOOT
    67 00000304 02                 
    68 00000305 83F800                  	cmp	ax,0
    69 00000308 750C                    	jne	.10E
    70 0000030A 68[A203]E8ACFD83C4-     	cdecl	puts,.e0
    70 00000312 02                 
    71 00000313 E8C5FD                  	call	reboot
    72                                  .10E:
    73                                  
    74 00000316 A1[B400]                	mov	ax,[BOOT + drive.no]
    75 00000319 6A046A106A0268-         	cdecl	itoa, ax, .p1, 2, 16, 0b0100
    75 00000320 [8603]50E8DEFE83C4-
    75 00000328 0A                 
    76 00000329 A1[B600]                	mov	ax,[BOOT + drive.cyln]
    77 0000032C 6A046A106A0468-         	cdecl	itoa, ax, .p2, 4, 16, 0b0100
    77 00000333 [8D03]50E8CBFE83C4-
    77 0000033B 0A                 
    78 0000033C A1[B800]                	mov	ax,[BOOT + drive.head]
    79 0000033F 6A046A106A0268-         	cdecl	itoa, ax, .p3, 2, 16, 0b0100
    79 00000346 [9603]50E8B8FE83C4-
    79 0000034E 0A                 
    80 0000034F A1[BA00]                	mov	ax,[BOOT + drive.sect]
    81 00000352 6A046A106A0268-         	cdecl	itoa, ax, .p4, 2, 16, 0b0100
    81 00000359 [9D03]50E8A5FE83C4-
    81 00000361 0A                 
    82                                  
    83 00000362 68[7C03]E854FD83C4-     	cdecl	puts,.s1
    83 0000036A 02                 
    84                                  
    85 0000036B EB50                    	jmp	stage_3
    86                                  
    87                                  
    88 0000036D 326E64207374616765-     .s0	db	"2nd stage...",0x0A,0x0D,0
    88 00000376 2E2E2E0A0D00       
    89                                  
    90 0000037C 2044726976653A3A30-     .s1	db	" Drive::0x"
    90 00000385 78                 
    91 00000386 2D2D2C433A3078          .p1	db	"--,C:0x"
    92 0000038D 2D2D2D2D2C483A3078      .p2	db	"----,H:0x"
    93 00000396 2D2D2C533A3078          .p3	db	"--,S:0x"
    94 0000039D 2D2D0A0D00              .p4	db	"--",0x0A,0x0D,0
    95                                  
    96 000003A2 43616E277420676574-     .e0	db	"Can't get drive parameter.",0
    96 000003AB 206472697665207061-
    96 000003B4 72616D657465722E00 
    97                                  
    98                                  stage_3:
    99                                  
   100 000003BD 68[0004]E8F9FC83C4-     	cdecl	puts,.s0
   100 000003C5 02                 
   101 000003C6 68[0002]E807FF83C4-     	cdecl	get_font_adr,FONT
   101 000003CE 02                 
   102 000003CF 6A046A106A0468-         	cdecl	itoa, word [FONT.seg], .p1, 4, 16, 0b0100
   102 000003D6 [1D04]FF36[0002]E8-
   102 000003DD 25FE83C40A         
   103 000003E2 6A046A106A0468-         	cdecl	itoa, word [FONT.off], .p2, 4, 16, 0b0100
   103 000003E9 [2204]FF36[0202]E8-
   103 000003F0 12FE83C40A         
   104                                  
   105 000003F5 68[0F04]E8C1FC83C4-     	cdecl	puts,.s1
   105 000003FD 02                 
   106                                  
   107 000003FE EBFE                    	jmp	$
   108                                  
   109 00000400 337264207374616765-     .s0	db	"3rd stage...",0x0A,0x0D,0
   109 00000409 2E2E2E0A0D00       
   110                                  
   111 0000040F 20466F6E7420416464-     .s1	db	" Font Address="
   111 00000418 726573733D         
   112 0000041D 5A5A5A5A3A              .p1	db	"ZZZZ:"			; segment
   113 00000422 5A5A5A5A0A0D00          .p2	db	"ZZZZ", 0x0A, 0x0D, 0	; offset
   114 00000429 0A0D00                  	db	0x0A,0x0D,0
   115 0000042C 2D2D2D2D2D2D2D2D0A-     .t0	db	"--------",0x0A,0x0D,0
   115 00000435 0D00               
   116                                  
   117 00000437 00<rept>                	times BOOT_SIZE - ($ - $$)	db	0
   118                                  
   119                                  
   120                                  
